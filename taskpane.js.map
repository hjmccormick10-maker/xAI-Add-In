{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://AddInXai/webpack/universalModuleDefinition","webpack://AddInXai/webpack/bootstrap","webpack://AddInXai/./src/taskpane.js","webpack://AddInXai/webpack/runtime/make namespace object"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","/* taskpane.js */\r\nimport './taskpane.css'; // Ensure CSS import for task pane styling\r\n\r\n// Log script load\r\nconsole.log('DEBUG: taskpane.js loaded at ' + new Date().toISOString());\r\n\r\n// Debounce function\r\nfunction debounce(func, wait) {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n        return new Promise((resolve, reject) => {\r\n            const later = () => {\r\n                clearTimeout(timeout);\r\n                try {\r\n                    const result = func(...args);\r\n                    resolve(result);\r\n                } catch (error) {\r\n                    reject(error);\r\n                }\r\n            };\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        });\r\n    };\r\n}\r\n\r\n// Global state\r\nlet isApiKeyValid = false;\r\nlet isSubmitting = false;\r\nlet isEventHandlersInitialized = false;\r\nlet currentModel = null;\r\nlet isFirstSubmission = true;\r\nlet currentSystemPrompt = 'You are a concise assistant for proposal writing in a Word add-in.';\r\nlet currentPersona = '';\r\nlet currentStyle = 'Normal';\r\n\r\n// Prevent multiple initializations\r\nif (window.__xaiAddInInitialized) {\r\n    console.log('DEBUG: Skipped taskpane.js initialization - already initialized');\r\n} else {\r\n    window.__xaiAddInInitialized = true;\r\n\r\n    function cleanText(text) {\r\n        if (!text || typeof text !== 'string') return '';\r\n        return text\r\n            .replace(/\\\\n\\\\r/g, '\\r\\n')\r\n            .replace(/\\\\n/g, '\\r\\n')\r\n            .replace(/\\\\r/g, '\\r\\n')\r\n            .replace(/\\\\\\\\n/g, '\\r\\n')\r\n            .replace(/\\n/g, '\\r\\n')\r\n            .replace(/\\\\t/g, '\\t')\r\n            .replace(/\\\\\\\\/g, '\\\\')\r\n            .replace(/\\\\&/g, '&')\r\n            .replace(/\\\\\\*/g, '*')\r\n            .replace(/\\*\\*(.*?)\\*\\*/g, '$1')\r\n            .replace(/\\*(.*?)\\*/g, '$1')\r\n            .replace(/^#+\\s*(.*?)$/gm, '$1')\r\n            .replace(/^\\s*[-*]\\s*(.*?)$/gm, '$1')\r\n            .replace(/\\\\[^nr&t*]/g, '')\r\n            .trim();\r\n    }\r\n\r\n    function isInitializedCheck() {\r\n        if (!window.__xaiAddInInitialized || !Office.context) {\r\n            console.log('isInitializedCheck: Office not initialized yet');\r\n            const statusMessage = document.getElementById('statusMessage');\r\n            if (statusMessage) statusMessage.textContent = 'Office is not initialized. Please wait and try again.';\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function ensureButtonVisibility() {\r\n        const buttons = [\r\n            document.getElementById('enterApiKeyButton'),\r\n            document.getElementById('enterModelButton'),\r\n            document.getElementById('configureChatButton'),\r\n        ];\r\n        buttons.forEach(button => {\r\n            if (button && button.style.display !== 'block') {\r\n                button.style.display = 'block';\r\n                console.log(`ensureButtonVisibility: Set ${button.id} to display: block`);\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            buttons.forEach(button => {\r\n                if (button && button.style.display !== 'block') {\r\n                    console.warn(`ensureButtonVisibility: ${button.id} was hidden, forcing display: block`);\r\n                    button.style.display = 'block';\r\n                }\r\n            });\r\n            const responseBox = document.getElementById('responseBox');\r\n            if (responseBox && responseBox.style.display !== 'block') {\r\n                console.warn('ensureButtonVisibility: responseBox was hidden, forcing display: block');\r\n                responseBox.style.display = 'block';\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    async function checkConfigOnLoad() {\r\n        const timerId = `checkConfigOnLoad_${Date.now()}`;\r\n        console.time(timerId);\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const apiKeyModal = document.getElementById('apiKeyModal');\r\n        const modelModal = document.getElementById('modelModal');\r\n        const styleInput = document.getElementById('styleInput');\r\n        if (!statusMessage || !apiKeyModal || !modelModal || !styleInput) {\r\n            console.error('checkConfigOnLoad: Missing DOM elements');\r\n            if (statusMessage) statusMessage.textContent = 'Error: UI elements missing.';\r\n            console.timeEnd(timerId);\r\n            return;\r\n        }\r\n        try {\r\n            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n            const configUrl = isLocal\r\n                ? 'http://localhost:3001/get-config'\r\n                : 'xai_config.json'; // Updated to lowercase\r\n            const response = await fetch(configUrl, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                mode: 'cors',\r\n            });\r\n            if (!response.ok) throw new Error(`Failed to fetch config, status: ${response.status}`);\r\n            const config = await response.json();\r\n            console.log('checkConfigOnLoad: Config received', config);\r\n\r\n            // Load API key from roamingSettings in production\r\n            let apiKey = null;\r\n            if (!isLocal) {\r\n                apiKey = Office.context.roamingSettings.get('xaiApiKey');\r\n                isApiKeyValid = !!apiKey && apiKey.startsWith('xai-') && apiKey.length >= 20;\r\n            } else {\r\n                isApiKeyValid = config.hasValidApiKey || false;\r\n            }\r\n\r\n            // Handle token limit\r\n            document.getElementsByName('tokenLimit').forEach(input => {\r\n                input.checked = parseInt(input.value) === (config.XAI_MAX_TOKENS || 1000);\r\n            });\r\n\r\n            // Handle model\r\n            if (config.XAI_MODEL) {\r\n                // Assume model is valid; adjust if xAI provides a validation endpoint\r\n                currentModel = config.XAI_MODEL;\r\n                localStorage.setItem('xaiModelVersion', currentModel);\r\n                document.getElementById('modelName').textContent = currentModel;\r\n                document.getElementById('modelInput').value = currentModel;\r\n            } else {\r\n                console.log('checkConfigOnLoad: No model in config');\r\n                currentModel = null;\r\n                document.getElementById('modelName').textContent = 'unknown';\r\n                statusMessage.textContent = 'No model configured. Please select a model.';\r\n                modelModal.style.display = 'block';\r\n                document.getElementById('modelInput')?.focus();\r\n            }\r\n\r\n            // Handle system prompt\r\n            currentSystemPrompt = config.XAI_SYSTEM_PROMPT || currentSystemPrompt;\r\n            localStorage.setItem('xaiSystemPrompt', currentSystemPrompt);\r\n            document.getElementById('systemPromptInput').value = currentSystemPrompt;\r\n            document.getElementById('userPersona').value = currentPersona;\r\n\r\n            // Handle style (XAI_FONT)\r\n            if (config.XAI_FONT) {\r\n                const cleanedStyle = cleanText(config.XAI_FONT).trim();\r\n                console.log(`checkConfigOnLoad: Validating style \"${cleanedStyle}\" from XAI_FONT`);\r\n                try {\r\n                    await Word.run(async (context) => {\r\n                        const styles = context.document.getStyles();\r\n                        context.load(styles);\r\n                        await context.sync();\r\n                        const styleExists = styles.items.some(style => style.nameLocal.toLowerCase() === cleanedStyle.toLowerCase());\r\n                        if (styleExists) {\r\n                            currentStyle = styles.items.find(style => style.nameLocal.toLowerCase() === cleanedStyle.toLowerCase()).nameLocal;\r\n                            styleInput.value = currentStyle;\r\n                            localStorage.setItem('xaiStyle', currentStyle);\r\n                            if (!isLocal) Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                            console.log(`checkConfigOnLoad: Set style to \"${currentStyle}\" from XAI_FONT`);\r\n                        } else {\r\n                            console.warn(`checkConfigOnLoad: Invalid style \"${cleanedStyle}\" in XAI_FONT`);\r\n                            currentStyle = 'Normal';\r\n                            styleInput.value = currentStyle;\r\n                            localStorage.setItem('xaiStyle', currentStyle);\r\n                            if (!isLocal) Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                            statusMessage.textContent = \"Invalid style in configuration. Defaulted to 'Normal'.\";\r\n                        }\r\n                        if (!isLocal) await Office.context.roamingSettings.saveAsync();\r\n                    });\r\n                } catch (error) {\r\n                    console.error(`checkConfigOnLoad: Error validating style \"${cleanedStyle}\"`, error.message);\r\n                    currentStyle = 'Normal';\r\n                    styleInput.value = currentStyle;\r\n                    localStorage.setItem('xaiStyle', currentStyle);\r\n                    if (!isLocal) {\r\n                        Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                        await Office.context.roamingSettings.saveAsync();\r\n                    }\r\n                    statusMessage.textContent = `Error validating style: ${error.message}. Defaulted to 'Normal'.`;\r\n                }\r\n            } else {\r\n                console.log('checkConfigOnLoad: No style in config (XAI_FONT missing)');\r\n                currentStyle = 'Normal';\r\n                styleInput.value = currentStyle;\r\n                localStorage.setItem('xaiStyle', currentStyle);\r\n                if (!isLocal) {\r\n                    Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                    await Office.context.roamingSettings.saveAsync();\r\n                }\r\n                statusMessage.textContent = \"No style configured. Defaulted to 'Normal'.\";\r\n            }\r\n\r\n            // Handle API key\r\n            if (!isApiKeyValid) {\r\n                console.log('checkConfigOnLoad: No valid API key');\r\n                localStorage.removeItem('xaiApiKey');\r\n                statusMessage.textContent = 'No valid API key found. Please enter a key.';\r\n                apiKeyModal.style.display = 'block';\r\n                apiKeyModal.focus();\r\n            } else {\r\n                console.log('checkConfigOnLoad: Valid API key found');\r\n                localStorage.setItem('xaiApiKey', '[REDACTED]');\r\n                statusMessage.textContent = 'API key loaded successfully.';\r\n            }\r\n\r\n            // Final status\r\n            if (isApiKeyValid && currentModel && currentStyle) {\r\n                statusMessage.textContent = 'Ready to submit questions.';\r\n            }\r\n        } catch (error) {\r\n            console.error('checkConfigOnLoad: Error', error.message);\r\n            localStorage.removeItem('xaiApiKey');\r\n            localStorage.removeItem('xaiModelVersion');\r\n            localStorage.removeItem('xaiSystemPrompt');\r\n            localStorage.removeItem('xaiPersona');\r\n            localStorage.removeItem('xaiStyle');\r\n            isApiKeyValid = false;\r\n            currentModel = null;\r\n            currentStyle = 'Normal';\r\n            styleInput.value = currentStyle;\r\n            document.getElementById('modelName').textContent = 'unknown';\r\n            statusMessage.textContent = `Error loading configuration: ${error.message}. Please enter an API key, model, and style.`;\r\n            apiKeyModal.style.display = 'block';\r\n            apiKeyModal.focus();\r\n        } finally {\r\n            console.timeEnd(timerId);\r\n            ensureButtonVisibility();\r\n        }\r\n    }\r\n\r\n    const saveModel = debounce(async function () {\r\n        const modelInput = document.getElementById('modelInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const modelModal = document.getElementById('modelModal');\r\n        if (!modelInput || !statusMessage || !modelModal) {\r\n            console.error('saveModel: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: Model input UI missing.';\r\n            return;\r\n        }\r\n        const newModel = cleanText(modelInput.value);\r\n        if (!newModel) {\r\n            console.log('saveModel: No model entered');\r\n            statusMessage.textContent = 'Please enter a model name.';\r\n            return;\r\n        }\r\n        try {\r\n            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n            if (isLocal) {\r\n                const saveResponse = await fetch('http://localhost:3001/save-env', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ model: newModel }),\r\n                    mode: 'cors',\r\n                });\r\n                if (!saveResponse.ok) throw new Error(`Failed to save model, status: ${saveResponse.status}`);\r\n            } else {\r\n                Office.context.roamingSettings.set('xaiModelVersion', newModel);\r\n                await Office.context.roamingSettings.saveAsync();\r\n            }\r\n            currentModel = newModel;\r\n            localStorage.setItem('xaiModelVersion', newModel);\r\n            document.getElementById('modelName').textContent = newModel;\r\n            document.getElementById('modelInput').value = newModel;\r\n            statusMessage.textContent = 'Model updated successfully.';\r\n            modelModal.style.display = 'none';\r\n            console.log(`saveModel: Set model to \"${newModel}\"`);\r\n        } catch (error) {\r\n            console.error('saveModel: Error', error.message);\r\n            statusMessage.textContent = `Error saving model: ${error.message}`;\r\n        } finally {\r\n            ensureButtonVisibility();\r\n        }\r\n    }, 500);\r\n\r\n    const configureChat = debounce(async function () {\r\n        console.log('configureChat: Starting');\r\n        const systemPromptInput = document.getElementById('systemPromptInput');\r\n        const userPersona = document.getElementById('userPersona');\r\n        const userMessageInput = document.getElementById('userMessageInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const chatConfigModal = document.getElementById('chatConfigModal');\r\n        if (!systemPromptInput || !userPersona || !userMessageInput || !statusMessage || !chatConfigModal) {\r\n            console.error('configureChat: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: Chat configuration UI missing.';\r\n            return;\r\n        }\r\n        systemPromptInput.value = currentSystemPrompt || '';\r\n        userPersona.value = currentPersona || '';\r\n        userMessageInput.value = '';\r\n        chatConfigModal.style.display = 'block';\r\n        systemPromptInput.focus();\r\n    }, 500);\r\n\r\n    const saveChatConfig = debounce(async function () {\r\n        console.log('saveChatConfig: Starting');\r\n        const systemPromptInput = document.getElementById('systemPromptInput');\r\n        const userPersona = document.getElementById('userPersona');\r\n        const userMessageInput = document.getElementById('userMessageInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const chatConfigModal = document.getElementById('chatConfigModal');\r\n        if (!systemPromptInput || !userPersona || !userMessageInput || !statusMessage || !chatConfigModal) {\r\n            console.error('saveChatConfig: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: Chat configuration UI missing.';\r\n            return;\r\n        }\r\n        const newSystemPrompt = cleanText(systemPromptInput.value);\r\n        const newPersona = cleanText(userPersona.value);\r\n        const newUserMessage = cleanText(userMessageInput.value);\r\n        if (!newSystemPrompt) {\r\n            console.log('saveChatConfig: No system prompt entered');\r\n            statusMessage.textContent = 'Please enter a system prompt.';\r\n            systemPromptInput.focus();\r\n            return;\r\n        }\r\n        if (newPersona.length > 50) {\r\n            console.log('saveChatConfig: Persona too long');\r\n            statusMessage.textContent = 'Persona must be 50 characters or less.';\r\n            userPersona.focus();\r\n            return;\r\n        }\r\n        try {\r\n            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n            if (isLocal) {\r\n                const saveResponse = await fetch('http://localhost:3001/save-env', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ systemPrompt: newSystemPrompt }),\r\n                    mode: 'cors',\r\n                });\r\n                if (!saveResponse.ok) throw new Error(`Failed to save chat config, status: ${saveResponse.status}`);\r\n            } else {\r\n                Office.context.roamingSettings.set('xaiSystemPrompt', newSystemPrompt);\r\n                Office.context.roamingSettings.set('xaiPersona', newPersona);\r\n                await Office.context.roamingSettings.saveAsync();\r\n            }\r\n            currentSystemPrompt = newSystemPrompt;\r\n            localStorage.setItem('xaiSystemPrompt', newSystemPrompt);\r\n            currentPersona = newPersona;\r\n            localStorage.setItem('xaiPersona', newPersona);\r\n            const questionBox = document.getElementById('questionBox');\r\n            if (questionBox) {\r\n                questionBox.value = newPersona && newUserMessage ? `As a ${newPersona}: ${newUserMessage}` : newUserMessage || '';\r\n            }\r\n            statusMessage.textContent = 'Chat configuration saved successfully.';\r\n            chatConfigModal.style.display = 'none';\r\n            console.log(`saveChatConfig: Set system prompt to \"${newSystemPrompt}\", persona to \"${newPersona}\"`);\r\n        } catch (error) {\r\n            console.error('saveChatConfig: Error', error.message);\r\n            statusMessage.textContent = `Error saving chat configuration: ${error.message}`;\r\n            systemPromptInput.value = currentSystemPrompt;\r\n            userPersona.value = currentPersona;\r\n            userMessageInput.value = '';\r\n        } finally {\r\n            ensureButtonVisibility();\r\n        }\r\n    }, 500);\r\n\r\n    function cancelChatConfig() {\r\n        console.log('cancelChatConfig: Starting');\r\n        const chatConfigModal = document.getElementById('chatConfigModal');\r\n        const systemPromptInput = document.getElementById('systemPromptInput');\r\n        const userPersona = document.getElementById('userPersona');\r\n        const userMessageInput = document.getElementById('userMessageInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        if (!chatConfigModal) {\r\n            console.error('cancelChatConfig: chatConfigModal not found in DOM');\r\n            statusMessage.textContent = 'Error: Chat configuration UI missing.';\r\n            return;\r\n        }\r\n        chatConfigModal.style.display = 'none';\r\n        if (systemPromptInput) systemPromptInput.value = currentSystemPrompt;\r\n        if (userPersona) userPersona.value = currentPersona;\r\n        if (userMessageInput) userMessageInput.value = '';\r\n        statusMessage.textContent = 'Chat configuration cancelled.';\r\n        ensureButtonVisibility();\r\n    }\r\n\r\n    const saveApiKey = debounce(async function () {\r\n        const apiKeyInput = document.getElementById('apiKeyInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const apiKeyModal = document.getElementById('apiKeyModal');\r\n        if (!apiKeyInput || !statusMessage || !apiKeyModal) {\r\n            console.error('saveApiKey: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: API key input UI missing.';\r\n            return;\r\n        }\r\n        const apiKey = apiKeyInput.value.trim();\r\n        if (!apiKey || !apiKey.startsWith('xai-') || apiKey.length < 20 || !/^[a-zA-Z0-9-]+$/.test(apiKey)) {\r\n            console.log('saveApiKey: Invalid API key format');\r\n            isApiKeyValid = false;\r\n            statusMessage.textContent = \"Invalid API key format. Must start with 'xai-' and be at least 20 characters.\";\r\n            apiKeyInput.focus();\r\n            return;\r\n        }\r\n        try {\r\n            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n            if (!isLocal) {\r\n                // Test API key with a minimal request\r\n                const testResponse = await fetch('https://api.x.ai/v1/chat/completions', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${apiKey}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        messages: [{ role: 'user', content: 'Test' }],\r\n                        model: 'grok-3',\r\n                        max_tokens: 10,\r\n                    }),\r\n                    mode: 'cors',\r\n                });\r\n                if (!testResponse.ok) {\r\n                    const errorData = await testResponse.json();\r\n                    throw new Error(errorData.error || 'API key validation failed');\r\n                }\r\n                Office.context.roamingSettings.set('xaiApiKey', apiKey);\r\n                await Office.context.roamingSettings.saveAsync();\r\n            } else {\r\n                const saveResponse = await fetch('http://localhost:3001/save-env', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ apiKey }),\r\n                    mode: 'cors',\r\n                });\r\n                if (!saveResponse.ok) {\r\n                    const errorData = await saveResponse.json();\r\n                    throw new Error(errorData.error || 'Failed to save API key to server');\r\n                }\r\n            }\r\n            localStorage.setItem('xaiApiKey', '[REDACTED]');\r\n            isApiKeyValid = true;\r\n            statusMessage.textContent = 'API key saved and validated successfully.';\r\n            apiKeyModal.style.display = 'none';\r\n            console.log('saveApiKey: API key saved');\r\n        } catch (error) {\r\n            console.error('saveApiKey: Error', error.message);\r\n            isApiKeyValid = false;\r\n            statusMessage.textContent = `Error saving API key: ${error.message}`;\r\n            apiKeyInput.focus();\r\n        } finally {\r\n            ensureButtonVisibility();\r\n        }\r\n    }, 500);\r\n\r\n    function cancelQuestion() {\r\n        const questionBox = document.getElementById('questionBox');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const tokenDisplay = document.getElementById('tokenDisplay');\r\n        if (questionBox) questionBox.value = '';\r\n        if (statusMessage) statusMessage.textContent = 'Question and response cleared.';\r\n        if (tokenDisplay) tokenDisplay.style.display = 'none';\r\n        console.log('cancelQuestion: Question discarded');\r\n    }\r\n\r\n    function discardResponse() {\r\n        const responseBox = document.getElementById('responseBox');\r\n        const tokenDisplay = document.getElementById('tokenDisplay');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        if (responseBox) {\r\n            responseBox.value = '';\r\n            responseBox.style.height = 'auto';\r\n        }\r\n        if (tokenDisplay) tokenDisplay.style.display = 'none';\r\n        if (statusMessage) statusMessage.textContent = 'Response discarded.';\r\n        console.log('discardResponse: Response discarded');\r\n    }\r\n\r\n    function toggleApiKeyVisibility() {\r\n        const apiKeyInput = document.getElementById('apiKeyInput');\r\n        const showApiKeyCheckbox = document.getElementById('showApiKeyCheckbox');\r\n        if (apiKeyInput && showApiKeyCheckbox) {\r\n            apiKeyInput.type = showApiKeyCheckbox.checked ? 'text' : 'password';\r\n        }\r\n    }\r\n\r\n    async function insertResponse() {\r\n        console.log('insertResponse: Starting');\r\n        if (!isInitializedCheck()) return;\r\n        const responseBox = document.getElementById('responseBox');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        if (!responseBox) {\r\n            console.error('insertResponse: Missing DOM elements', { responseBox });\r\n            if (statusMessage) statusMessage.textContent = 'Error: UI elements missing.';\r\n            return;\r\n        }\r\n        if (!responseBox.value) {\r\n            console.log('insertResponse: No response to insert');\r\n            if (statusMessage) statusMessage.textContent = 'No response to insert.';\r\n            return;\r\n        }\r\n        try {\r\n            await Word.run(async (context) => {\r\n                const wordDocument = context.document;\r\n                const styles = wordDocument.getStyles();\r\n                const selection = wordDocument.getSelection();\r\n                context.load(styles);\r\n                context.load(selection);\r\n                await context.sync();\r\n                console.log('insertResponse: Available styles =', styles.items.map(s => s.nameLocal));\r\n                const styleName = currentStyle;\r\n                console.log('insertResponse: Using style =', styleName);\r\n                const cleanedText = cleanText(responseBox.value);\r\n                const paragraphs = cleanedText.split('\\r\\n').filter(p => p.trim());\r\n                for (let i = paragraphs.length - 1; i >= 0; i--) {\r\n                    const paraText = paragraphs[i];\r\n                    console.log(`insertResponse: Preparing paragraph ${i + 1}:`, paraText);\r\n                    const paragraph = selection.insertParagraph(paraText, Word.InsertLocation.after);\r\n                    try {\r\n                        paragraph.style = styleName;\r\n                    } catch (error) {\r\n                        console.log(`insertResponse: Failed to apply style ${styleName}: ${error.message}`);\r\n                        paragraph.style = 'Normal';\r\n                        paragraph.font.name = 'Arial';\r\n                        paragraph.font.size = 11;\r\n                        paragraph.font.color = '#1A3C5A';\r\n                    }\r\n                    if (styleName === 'Normal') {\r\n                        paragraph.font.name = 'Arial';\r\n                        paragraph.font.size = 11;\r\n                        paragraph.font.color = '#1A3C5A';\r\n                    }\r\n                    if (paraText.match(/\\*\\*(.*?)\\*\\*/)) paragraph.font.bold = true;\r\n                    if (paraText.match(/^\\s*[-*]\\s*(.*?)$/)) paragraph.leftIndent = 20;\r\n                    if (paraText.match(/^[A-Za-z\\s]+:$/) || paraText.match(/^#+\\s*(.*?)$/)) {\r\n                        paragraph.font.size = 14;\r\n                        paragraph.font.bold = true;\r\n                        paragraph.spaceAfter = 6;\r\n                    }\r\n                    paragraph.spaceAfter = 6;\r\n                }\r\n                await context.sync();\r\n                console.log('insertResponse: All paragraphs inserted');\r\n                if (statusMessage) statusMessage.textContent = 'Response inserted.';\r\n            });\r\n        } catch (error) {\r\n            console.error('insertResponse: Error', error.message, error.stack);\r\n            if (statusMessage) statusMessage.textContent = `Error inserting response: ${error.message}`;\r\n        } finally {\r\n            ensureButtonVisibility();\r\n        }\r\n    }\r\n\r\n    async function insertSnippet() {\r\n        console.log('insertSnippet: Starting');\r\n        if (!isInitializedCheck()) return;\r\n        const responseBox = document.getElementById('responseBox');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        if (!responseBox) {\r\n            console.error('insertSnippet: Missing DOM elements', { responseBox });\r\n            if (statusMessage) statusMessage.textContent = 'Error: UI elements missing.';\r\n            return;\r\n        }\r\n        const selectionStart = responseBox.selectionStart;\r\n        const selectionEnd = responseBox.selectionEnd;\r\n        const selectedText = cleanText(responseBox.value.substring(selectionStart, selectionEnd) || '');\r\n        if (!selectedText) {\r\n            console.log('insertSnippet: No text selected');\r\n            if (statusMessage) statusMessage.textContent = 'Please select text to insert.';\r\n            return;\r\n        }\r\n        try {\r\n            await Word.run(async (context) => {\r\n                const wordDocument = context.document;\r\n                const styles = wordDocument.getStyles();\r\n                const selection = wordDocument.getSelection();\r\n                context.load(styles);\r\n                context.load(selection);\r\n                await context.sync();\r\n                console.log('insertSnippet: Available styles =', styles.items.map(s => s.nameLocal));\r\n                const styleName = currentStyle;\r\n                const paragraphs = selectedText.split('\\r\\n').filter(p => p.trim());\r\n                for (let i = paragraphs.length - 1; i >= 0; i--) {\r\n                    const paraText = paragraphs[i];\r\n                    console.log(`insertSnippet: Preparing paragraph ${i + 1}:`, paraText);\r\n                    const paragraph = selection.insertParagraph(paraText, Word.InsertLocation.after);\r\n                    try {\r\n                        paragraph.style = styleName;\r\n                    } catch (error) {\r\n                        console.log(`insertSnippet: Failed to apply style ${styleName}: ${error.message}`);\r\n                        paragraph.style = 'Normal';\r\n                        paragraph.font.name = 'Arial';\r\n                        paragraph.font.size = 11;\r\n                        paragraph.font.color = '#1A3C5A';\r\n                    }\r\n                    if (styleName === 'Normal') {\r\n                        paragraph.font.name = 'Arial';\r\n                        paragraph.font.size = 11;\r\n                        paragraph.font.color = '#1A3C5A';\r\n                    }\r\n                    if (paraText.match(/\\*\\*(.*?)\\*\\*/)) paragraph.font.bold = true;\r\n                    if (paraText.match(/^\\s*[-*]\\s*(.*?)$/)) paragraph.leftIndent = 20;\r\n                    if (paraText.match(/^[A-Za-z\\s]+:$/) || paraText.match(/^#+\\s*(.*?)$/)) {\r\n                        paragraph.font.size = 14;\r\n                        paragraph.font.bold = true;\r\n                        paragraph.spaceAfter = 6;\r\n                    }\r\n                    paragraph.spaceAfter = 6;\r\n                }\r\n                await context.sync();\r\n                console.log('insertSnippet: All paragraphs inserted');\r\n                if (statusMessage) statusMessage.textContent = 'Snippet inserted.';\r\n            });\r\n            responseBox.setSelectionRange(selectionStart, selectionEnd);\r\n            responseBox.focus();\r\n        } catch (error) {\r\n            console.error('insertSnippet: Error', error.message, error.stack);\r\n            if (statusMessage) statusMessage.textContent = `Error inserting snippet: ${error.message}`;\r\n        } finally {\r\n            ensureButtonVisibility();\r\n        }\r\n    }\r\n\r\n    const saveStyle = debounce(async function () {\r\n        const styleModalInput = document.getElementById('styleModalInput');\r\n        const styleInput = document.getElementById('styleInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const styleModal = document.getElementById('styleModal');\r\n        if (!styleModalInput || !styleInput || !statusMessage || !styleModal) {\r\n            console.error('saveStyle: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: Style input UI missing.';\r\n            return;\r\n        }\r\n        const newStyle = cleanText(styleModalInput.value).trim();\r\n        if (!newStyle) {\r\n            console.log('saveStyle: No style entered');\r\n            statusMessage.textContent = 'Please enter a style name.';\r\n            styleModalInput.focus();\r\n            return;\r\n        }\r\n        try {\r\n            await Word.run(async (context) => {\r\n                const styles = context.document.getStyles();\r\n                context.load(styles);\r\n                await context.sync();\r\n                const styleExists = styles.items.some(style => style.nameLocal.toLowerCase() === newStyle.toLowerCase());\r\n                if (!styleExists) {\r\n                    console.warn('saveStyle: Style not found', newStyle);\r\n                    statusMessage.textContent = 'Style is not available.';\r\n                    currentStyle = 'Normal';\r\n                    styleInput.value = currentStyle;\r\n                    localStorage.setItem('xaiStyle', currentStyle);\r\n                } else {\r\n                    currentStyle = styles.items.find(style => style.nameLocal.toLowerCase() === newStyle.toLowerCase()).nameLocal;\r\n                    styleInput.value = currentStyle;\r\n                    localStorage.setItem('xaiStyle', currentStyle);\r\n                    const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n                    if (!isLocal) {\r\n                        Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                        await Office.context.roamingSettings.saveAsync();\r\n                    } else {\r\n                        const saveResponse = await fetch('http://localhost:3001/save-env', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify({ font: currentStyle }),\r\n                            mode: 'cors',\r\n                        });\r\n                        if (!saveResponse.ok) throw new Error(`Failed to save style, status: ${saveResponse.status}`);\r\n                    }\r\n                    statusMessage.textContent = `Style set to \"${currentStyle}\".`;\r\n                }\r\n                styleModal.style.display = 'none';\r\n                console.log(`saveStyle: Set style to \"${currentStyle}\"`);\r\n            });\r\n        } catch (error) {\r\n            console.error('saveStyle: Error', error.message);\r\n            statusMessage.textContent = `Error saving style: ${error.message}. Defaulted to 'Normal'.`;\r\n            currentStyle = 'Normal';\r\n            styleInput.value = currentStyle;\r\n            localStorage.setItem('xaiStyle', currentStyle);\r\n            if (!isLocal) {\r\n                Office.context.roamingSettings.set('xaiStyle', currentStyle);\r\n                await Office.context.roamingSettings.saveAsync();\r\n            }\r\n            styleModal.style.display = 'none';\r\n        }\r\n    }, 500);\r\n\r\n    function cancelStyle() {\r\n        const styleModal = document.getElementById('styleModal');\r\n        const styleModalInput = document.getElementById('styleModalInput');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        if (!styleModal || !styleModalInput) {\r\n            console.error('cancelStyle: Missing DOM elements');\r\n            statusMessage.textContent = 'Error: Style input UI missing.';\r\n            return;\r\n        }\r\n        styleModalInput.value = currentStyle;\r\n        styleModal.style.display = 'none';\r\n        statusMessage.textContent = 'Style change cancelled.';\r\n        console.log('cancelStyle: Style change cancelled');\r\n    }\r\n\r\n    function handleQuestionBoxKeydown(event) {\r\n        if (event.key === 'Enter' && !event.shiftKey && !isSubmitting) {\r\n            event.preventDefault();\r\n            console.log('handleQuestionBoxKeydown: Enter key pressed, triggering submitQuestion');\r\n            submitQuestion();\r\n        }\r\n    }\r\n\r\n    const submitQuestion = debounce(async function () {\r\n        if (isSubmitting) {\r\n            console.log('submitQuestion: Submission debounced, already in progress');\r\n            return;\r\n        }\r\n        isSubmitting = true;\r\n        const timerId = `submitQuestion_${Date.now()}`;\r\n        console.time(timerId);\r\n        const questionBox = document.getElementById('questionBox');\r\n        const statusMessage = document.getElementById('statusMessage');\r\n        const apiKeyModal = document.getElementById('apiKeyModal');\r\n        const modelModal = document.getElementById('modelModal');\r\n        const submitButton = document.getElementById('submitButton');\r\n        if (submitButton) {\r\n            submitButton.disabled = true;\r\n            submitButton.textContent = 'Submitting...';\r\n        }\r\n        const question = cleanText(questionBox?.value || '');\r\n        const maxTokens = parseInt(document.querySelector('input[name=\"tokenLimit\"]:checked')?.value || 1000);\r\n        if (!question) {\r\n            console.log('submitQuestion: No question entered');\r\n            statusMessage.textContent = 'Please enter a question.';\r\n            isSubmitting = false;\r\n            if (submitButton) {\r\n                submitButton.disabled = false;\r\n                submitButton.textContent = 'Submit Question';\r\n            }\r\n            console.timeEnd(timerId);\r\n            return;\r\n        }\r\n        if (!isApiKeyValid) {\r\n            console.log('submitQuestion: No valid API key');\r\n            statusMessage.textContent = 'Please enter a valid API key.';\r\n            apiKeyModal.style.display = 'block';\r\n            apiKeyModal.focus();\r\n            isSubmitting = false;\r\n            if (submitButton) {\r\n                submitButton.disabled = false;\r\n                submitButton.textContent = 'Submit Question';\r\n            }\r\n            console.timeEnd(timerId);\r\n            return;\r\n        }\r\n        if (!currentModel) {\r\n            console.log('submitQuestion: No valid model selected');\r\n            statusMessage.textContent = 'Please select a valid model.';\r\n            modelModal.style.display = 'block';\r\n            document.getElementById('modelInput')?.focus();\r\n            isSubmitting = false;\r\n            if (submitButton) {\r\n                submitButton.disabled = false;\r\n                submitButton.textContent = 'Submit Question';\r\n            }\r\n            console.timeEnd(timerId);\r\n            return;\r\n        }\r\n        try {\r\n            const isLocal = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n            let apiKey = null;\r\n            if (!isLocal) {\r\n                apiKey = Office.context.roamingSettings.get('xaiApiKey');\r\n            }\r\n            statusMessage.textContent = 'Submitting question...';\r\n            const effectiveQuestion = currentPersona && question && !question.startsWith(`As a ${currentPersona}: `)\r\n                ? `As a ${currentPersona}: ${question}`\r\n                : question;\r\n            const response = await fetch(isLocal ? 'http://localhost:3001/api/chat' : 'https://api.x.ai/v1/chat/completions', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    ...(isLocal ? {} : { Authorization: `Bearer ${apiKey}` }),\r\n                },\r\n                body: JSON.stringify({\r\n                    messages: [\r\n                        { role: 'system', content: currentSystemPrompt },\r\n                        { role: 'user', content: effectiveQuestion },\r\n                    ],\r\n                    model: currentModel,\r\n                    max_tokens: maxTokens,\r\n                }),\r\n                mode: 'cors',\r\n            });\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || `HTTP error, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            const responseBox = document.getElementById('responseBox');\r\n            if (responseBox) {\r\n                responseBox.value = cleanText(data.choices?.[0]?.message?.content || 'No response received.');\r\n                responseBox.style.height = 'auto';\r\n                responseBox.style.height = `${responseBox.scrollHeight}px`;\r\n            }\r\n            const tokenDisplay = document.getElementById('tokenDisplay');\r\n            if (data.usage && tokenDisplay) {\r\n                document.getElementById('promptTokens').textContent = data.usage.prompt_tokens || 0;\r\n                document.getElementById('completionTokens').textContent = data.usage.completion_tokens || 0;\r\n                document.getElementById('totalTokens').textContent = data.usage.total_tokens || 0;\r\n                tokenDisplay.style.display = 'block';\r\n            }\r\n            statusMessage.textContent = 'Response received.';\r\n        } catch (error) {\r\n            console.error('submitQuestion: Error', error.message);\r\n            statusMessage.textContent = `Error: ${error.message}. Please check your API key or model.`;\r\n            apiKeyModal.style.display = 'block';\r\n            apiKeyModal.focus();\r\n        } finally {\r\n            isSubmitting = false;\r\n            if (submitButton) {\r\n                submitButton.disabled = false;\r\n                submitButton.textContent = 'Submit Question';\r\n            }\r\n            console.timeEnd(timerId);\r\n            ensureButtonVisibility();\r\n        }\r\n    }, 500);\r\n\r\n    function initializeEventHandlers() {\r\n        if (isEventHandlersInitialized) {\r\n            console.log('DEBUG: Skipped event handler initialization - already initialized');\r\n            return;\r\n        }\r\n        isEventHandlersInitialized = true;\r\n        try {\r\n            const elements = {\r\n                submitButton: document.getElementById('submitButton'),\r\n                questionBox: document.getElementById('questionBox'),\r\n                responseBox: document.getElementById('responseBox'),\r\n                cancelButton: document.getElementById('cancelButton'),\r\n                enterApiKeyButton: document.getElementById('enterApiKeyButton'),\r\n                saveApiKeyButton: document.getElementById('saveApiKeyButton'),\r\n                cancelApiKeyButton: document.getElementById('cancelApiKeyButton'),\r\n                showApiKeyCheckbox: document.getElementById('showApiKeyCheckbox'),\r\n                insertButton: document.getElementById('insertButton'),\r\n                insertSnippetButton: document.getElementById('insertSnippetButton'),\r\n                discardButton: document.getElementById('discardButton'),\r\n                enterModelButton: document.getElementById('enterModelButton'),\r\n                saveModelButton: document.getElementById('saveModelButton'),\r\n                cancelModelButton: document.getElementById('cancelModelButton'),\r\n                configureChatButton: document.getElementById('configureChatButton'),\r\n                saveChatConfigButton: document.getElementById('saveChatConfigButton'),\r\n                cancelChatConfigButton: document.getElementById('cancelChatConfigButton'),\r\n                apiKeyModal: document.getElementById('apiKeyModal'),\r\n                modelModal: document.getElementById('modelModal'),\r\n                chatConfigModal: document.getElementById('chatConfigModal'),\r\n                changeStyleButton: document.getElementById('changeStyleButton'),\r\n                styleModal: document.getElementById('styleModal'),\r\n                saveStyleButton: document.getElementById('saveStyleButton'),\r\n                cancelStyleButton: document.getElementById('cancelStyleButton'),\r\n                modelInput: document.getElementById('modelInput'),\r\n                styleModalInput: document.getElementById('styleModalInput'),\r\n            };\r\n\r\n            const missingElements = Object.entries(elements)\r\n                .filter(([key, value]) => !value)\r\n                .map(([key]) => key);\r\n            if (missingElements.length > 0) {\r\n                console.error('initializeEventHandlers: Missing DOM elements:', missingElements.join(', '));\r\n                const statusMessage = document.getElementById('statusMessage');\r\n                if (statusMessage) {\r\n                    statusMessage.textContent = 'Error: Some UI elements are missing.';\r\n                }\r\n                return;\r\n            }\r\n\r\n            elements.submitButton.addEventListener('click', submitQuestion);\r\n            elements.questionBox.addEventListener('keydown', handleQuestionBoxKeydown);\r\n            elements.cancelButton.addEventListener('click', cancelQuestion);\r\n            elements.discardButton.addEventListener('click', discardResponse);\r\n            elements.insertButton.addEventListener('click', insertResponse);\r\n            elements.insertSnippetButton.addEventListener('click', insertSnippet);\r\n            elements.enterApiKeyButton.addEventListener('click', () => {\r\n                elements.apiKeyModal.style.display = 'block';\r\n                document.getElementById('apiKeyInput')?.focus();\r\n            });\r\n            elements.saveApiKeyButton.addEventListener('click', saveApiKey);\r\n            elements.cancelApiKeyButton.addEventListener('click', () => {\r\n                elements.apiKeyModal.style.display = 'none';\r\n                const statusMessage = document.getElementById('statusMessage');\r\n                if (statusMessage) {\r\n                    statusMessage.textContent = isApiKeyValid ? 'API key unchanged.' : 'Please enter a valid API key.';\r\n                }\r\n            });\r\n            elements.showApiKeyCheckbox.addEventListener('change', toggleApiKeyVisibility);\r\n            elements.enterModelButton.addEventListener('click', () => {\r\n                elements.modelModal.style.display = 'block';\r\n                document.getElementById('modelInput')?.focus();\r\n            });\r\n            elements.saveModelButton.addEventListener('click', saveModel);\r\n            elements.cancelModelButton.addEventListener('click', () => {\r\n                elements.modelModal.style.display = 'none';\r\n                const statusMessage = document.getElementById('statusMessage');\r\n                if (statusMessage) {\r\n                    statusMessage.textContent = currentModel ? 'Model unchanged.' : 'Please select a valid model.';\r\n                }\r\n            });\r\n            elements.configureChatButton.addEventListener('click', configureChat);\r\n            elements.saveChatConfigButton.addEventListener('click', saveChatConfig);\r\n            elements.cancelChatConfigButton.addEventListener('click', cancelChatConfig);\r\n            elements.changeStyleButton.addEventListener('click', () => {\r\n                elements.styleModal.style.display = 'block';\r\n                const styleModalInput = document.getElementById('styleModalInput');\r\n                styleModalInput.value = currentStyle;\r\n                styleModalInput.focus();\r\n            });\r\n            elements.saveStyleButton.addEventListener('click', saveStyle);\r\n            elements.cancelStyleButton.addEventListener('click', cancelStyle);\r\n            elements.modelInput.addEventListener('keydown', (event) => {\r\n                if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    saveModel();\r\n                }\r\n            });\r\n            elements.styleModalInput.addEventListener('keydown', (event) => {\r\n                if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    saveStyle();\r\n                }\r\n            });\r\n\r\n            console.log('initializeEventHandlers: Event handlers set up successfully');\r\n        } catch (error) {\r\n            console.error('initializeEventHandlers: Error setting up event handlers', error.message, error.stack);\r\n            const statusMessage = document.getElementById('statusMessage');\r\n            if (statusMessage) {\r\n                statusMessage.textContent = `Error initializing UI: ${error.message}`;\r\n            }\r\n        }\r\n    }\r\n\r\n    Office.onReady(() => {\r\n        console.log('Office.onReady: Office initialized');\r\n        initializeEventHandlers();\r\n        checkConfigOnLoad();\r\n    });\r\n}","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["root","factory","exports","module","define","amd","a","i","self","e","t","r","Symbol","n","iterator","o","toStringTag","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","debounce","func","wait","timeout","_len","args","Array","_key","reject","clearTimeout","setTimeout","result","error","console","log","Date","toISOString","isApiKeyValid","isSubmitting","isEventHandlersInitialized","currentModel","currentSystemPrompt","currentPersona","currentStyle","window","__xaiAddInInitialized","cleanText","text","replace","trim","isInitializedCheck","Office","context","statusMessage","document","getElementById","textContent","ensureButtonVisibility","buttons","forEach","button","style","display","concat","id","warn","responseBox","checkConfigOnLoad","_ref","_callee2","timerId","apiKeyModal","modelModal","styleInput","_isLocal","configUrl","response","config","apiKey","_document$getElementB","cleanedStyle","_t","_t2","_context2","now","time","timeEnd","isLocal","location","hostname","fetch","method","headers","mode","ok","Error","status","json","hasValidApiKey","roamingSettings","get","startsWith","getElementsByName","input","checked","parseInt","XAI_MAX_TOKENS","XAI_MODEL","localStorage","setItem","focus","XAI_SYSTEM_PROMPT","XAI_FONT","Word","run","_ref2","_callee","styles","_context","getStyles","load","sync","items","some","nameLocal","toLowerCase","find","set","saveAsync","_x","message","removeItem","cancelChatConfig","chatConfigModal","systemPromptInput","userPersona","userMessageInput","cancelQuestion","questionBox","tokenDisplay","discardResponse","height","toggleApiKeyVisibility","apiKeyInput","showApiKeyCheckbox","type","insertResponse","_ref7","_callee8","_t6","_context8","_ref8","_callee7","wordDocument","selection","styleName","cleanedText","paragraphs","paraText","paragraph","_context7","getSelection","map","s","split","filter","insertParagraph","InsertLocation","after","font","name","size","color","match","bold","leftIndent","spaceAfter","_x2","stack","insertSnippet","_ref9","_callee0","selectionStart","selectionEnd","selectedText","_t7","_context0","substring","_ref0","_callee9","_context9","_x3","setSelectionRange","cancelStyle","styleModal","styleModalInput","handleQuestionBoxKeydown","event","key","shiftKey","preventDefault","submitQuestion","saveModel","_callee3","modelInput","newModel","saveResponse","_t3","_context3","body","JSON","stringify","model","configureChat","_callee4","_context4","saveChatConfig","_callee5","newSystemPrompt","newPersona","newUserMessage","_t4","_context5","systemPrompt","saveApiKey","_callee6","testResponse","errorData","_errorData","_t5","_context6","test","Authorization","messages","role","content","max_tokens","saveStyle","_callee10","newStyle","_t8","_context10","_ref10","_callee1","_context1","_x4","_callee11","_document$querySelect","submitButton","question","maxTokens","_document$getElementB2","_isLocal6","effectiveQuestion","data","_data$choices","_t9","_context11","disabled","querySelector","_objectSpread","choices","scrollHeight","usage","prompt_tokens","completion_tokens","total_tokens","onReady","elements","cancelButton","enterApiKeyButton","saveApiKeyButton","cancelApiKeyButton","insertButton","insertSnippetButton","discardButton","enterModelButton","saveModelButton","cancelModelButton","configureChatButton","saveChatConfigButton","cancelChatConfigButton","changeStyleButton","saveStyleButton","cancelStyleButton","missingElements","entries","_ref12","_ref13","_slicedToArray","_ref14","join","addEventListener","_document$getElementB3","_document$getElementB4","initializeEventHandlers"],"sourceRoot":""}